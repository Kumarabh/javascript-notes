//A promise object has a state that can be one of the following:

//1. Pending
//2. Fulfilled with a value
//3. Rejected for a reason


function getUsers() {
  const organisation = {
    orgId: 1393839,
    orgName: 'ORG PVT LTD.',
    getInformationDetails() { 
      return this.orgName.concat(' ', 
      'founded by ', this.foundedBy, ' on ', this.foundedDate );
    }
  } // descriptors: true

  const promise = new Promise((resolve, reject) => {
    console.log('fetching...')
    const random = Math.floor(Math.random() * 10);
    console.log(random)
    setTimeout(() => {
      
      if (random % 2 === 0)
        resolve(organisation);
      else
        reject('request failed.')
    }, 1000);
  })

  return promise
}

function onFulfilled(users) {
  console.log(users);
}
function onRejected(error) {
  console.log(error);
}

const promise = getUsers();
promise.then(onFulfilled, onRejected);
